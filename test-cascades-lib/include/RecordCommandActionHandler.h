/**
 * Copyright 2013 Truphone
 */
#ifndef RECORDCOMMANDACTIONHANDLER_H_
#define RECORDCOMMANDACTIONHANDLER_H_

#include <bb/cascades/AbstractActionItem>

#include "RecordCommand.h"

namespace truphone
{
namespace test
{
namespace cascades
{
    /*!
     * \brief The RecordCommandActionHandler class is used to hold
     * the object and listen for actions generated by the action
     *
     * @since test-cascades 1.0.0
     */
    class RecordCommandActionHandler : public RecordCommand::RecordCommandHandler
    {
    Q_OBJECT
    public:
        /*!
         * \brief RecordCommandActionHandler Create a new handler
         *
         * \param recorder The parent recorder object that we need to notify
         * if an action occurs
         * \param action The action we're watching/listening on
         * \param parent The parent object
         *
         * @since test-cascades 1.0.0
         */
        RecordCommandActionHandler(
                RecordCommand * const recorder,
                bb::cascades::AbstractActionItem * const action,
                QObject * parent = 0)
            : RecordCommandHandler(parent),
              recorder(recorder),
              action(action)
        {
            connect(action,
                    SIGNAL(triggered()),
                    SLOT(executed()));
        }
        /*!
         * \brief ~RecordCommandActionHandler Destructor
         *
         * @since test-cascades 1.0.0
         */
        ~RecordCommandActionHandler()
        {
            disconnect(action,
                       SIGNAL(triggered()));
        }
    protected:
    private slots:
        /*!
         * \brief executed Slot for when the action is executed
         *
         * @since test-cascades 1.0.0
         */
        void executed()
        {
            this->recorder->actionExecuted(this->action);
        }

    private:
        /*!
         * \brief recorder Our parent recorder
         */
        RecordCommand * const recorder;
        /*!
         * \brief action The action that we're listening to
         */
        bb::cascades::AbstractActionItem * const action;
    };
}  // namespace cascades
}  // namespace test
}  // namespace truphone

#endif  // RECORDCOMMANDACTIONHANDLER_H_
